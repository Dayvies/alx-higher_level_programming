test cases on 7-base_geometry.txt

1. Control test:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> 
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

2. value as float 
>>> bg.integer_validator("width", 89.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/davy/Desktop/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 21, in integer_validator
    raise TypeError(name + " must be an integer")
TypeError: width must be an integer

3. value less than 0
>>> bg.integer_validator("width", -89)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/davy/Desktop/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 23, in integer_validator
    raise ValueError(name +" must be greater than 0")
ValueError: width must be greater than 0

4. Empty strings
>>> bg.integer_validator("", 89)
